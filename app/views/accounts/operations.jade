extends ../layouts/default

block header
  link(rel='stylesheet', href='/css/datepicker.css')
  link(rel='stylesheet', href='/css/jquery.toolbars.css')
  link(rel='stylesheet', href='/css/bootstrap-notify.css')

block content
  div.container
    div.row
      div.span3
        include ../accounts/navbar
      div.span9
        h2
          strong #{req.account.name}
          | : #{lingua.accountOperations}
        
        div(class='notifications bottom-right')
        
        form(class="well form-inline", id="operation")
          label(for="name") #{lingua.operation.name} : 
          input(type="text",id="name", name="name", class="input-small") 
          label(for="amount") #{lingua.operation.amount} : 
          input(type="text",id="amount", name="amount", class="input-small") 
          label(for="type") #{lingua.operation.type} : 
          select(id="type", name="type", style='width:100px')
            option(value="debit") #{lingua.operation.typeDebit}
            option(value="credit") #{lingua.operation.typeCredit}
          label(for="date") #{lingua.operation.date} : 
          div(class="input-append date", id="dp3", data-date="12/02/2012", data-date-format="dd/mm/yyyy")
            input(class="input-small", id="date", name="date", size="16", type="text", value="12/02/2012")
            span(class="add-on")
              i(class="icon-th")
          button(class="btn btn-primary",type="button", id="addOperation") #{lingua.add}
        div.fuelux
          table( id="MyGrid", class="table table-bordered datagrid")
            thead
              tr
                th(colspan="2")
                  span.datagrid-header-title Operations
                  div.datagrid-header-left
                  div.datagrid-header-right
                    div(class="input-append search")
                      input(type="text", class="input-medium", placeholder="Search")
                      button.btn
                        i.icon-search
            tfoot
              tr
                th
                  div.datagrid-footer-left( style="display:none;")
                    div.grid-controls
                      span
                        span.grid-start - 
                        span.grid-end of 
                        span.grid-count
                      select.grid-pagesize
                        option 10
                        option 20
                        option 50
                        option 100
                      span Per Page
                  div.datagrid-footer-right(style="display:none;")
                    div.grid-pager
                      button(class="btn grid-prevpage")
                        i.icon-chevron-left
                      span Page
                      div(class="input-append dropdown combobox")
                        input.span1(type="text")
                          button.btn( data-toggle="dropdown")
                            i.caret
                        ul.dropdown-menu
                      span of
                        span.grid-pages
                      button(class="btn grid-nextpage")
                        i.icon-chevron-right
        
        div(class='modal fade', id='edit-ope')
          form(class="form-horizontal", id="edit-operation-form")
            input(type="hidden", name="_method", value="PUT")
            div.modal-header
              button.close(data-dismiss='modal')×
              h3 #{lingua.editOperation.title}

            div.modal-body
              .control-group
                label(class='control-label',for='name') #{lingua.operation.name}
                .controls
                  input(type='text',id='edit-name', name='name', size='40', class='input') 
              .control-group
                label(class='control-label',for="amount") #{lingua.operation.amount}
                .controls
                  input(type="text",id="edit-amount", name="amount", class="input") 
              .control-group
                label(class='control-label',for="type") #{lingua.operation.type}
                .controls
                  select(id="edit-type", name="type", style='width:100px')
                    option(value="debit") #{lingua.operation.typeDebit}
                    option(value="credit") #{lingua.operation.typeCredit}
              .control-group
                label(class='control-label',for="date") #{lingua.operation.date}
                .controls
                  div(class="input-append date", id="dp4", data-date="12/02/2012", data-date-format="dd/mm/yyyy")
                    input(class="input-small", id="edit-date", name="date", size="16", type="text", value="12/02/2012")
                    span(class="add-on")
                      i(class="icon-th")
            div.modal-footer
              input(id="ope-to-edit", type="hidden")
              button(class='btn btn-error', data-dismiss='modal') #{lingua.close}
              button(type="button", id="editOperation", class='btn btn-primary') #{lingua.edit}
        
        div(class='modal fade', id='delete-ope')
          form
            input(type="hidden", name="_method", value="DELETE")
            div.modal-header
              button.close(data-dismiss='modal')×
              h3 #{lingua.deleteOperation.title}

            div.modal-body
              p#delete-confirm 

            div.modal-footer
              input(id="ope-to-delete", type="hidden")
              button(class='btn btn-error', data-dismiss='modal') #{lingua.close}
              button(type="button", id="delOperation", class='btn btn-danger') #{lingua.delete}

block pageScript
  script(src="/js/datasource.js", type="text/javascript")
  script(src="/js/bootstrap-datepicker.js", type="text/javascript")
  script(src="/js/moment.min.js", type="text/javascript")  
  script(src="/js/lang/fr.js", type="text/javascript")
  script(src="/js/bootstrap-notify.js", type="text/javascript")
  script(type="text/javascript")
    $(document).ready(function() {
      //ajax sending for adding an operation
      $('#addOperation').click(function() {
          var jsonOp = JSON.stringify($("#operation").serializeObject());
          console.log(jsonOp);
          //console.log($('#operation').serialize());
          $.ajax({
              url: '/users/'+!{JSON.stringify(req.user.id)}+'/accounts/'+!{JSON.stringify(req.account.id)}+'/operation/',
              type: "POST",
              contentType: "application/json",
              data: jsonOp,
              success: function (result) {
                $('#MyGrid').datagrid('reload');
                $('.amountAccount').trigger('refresh');
                $('.bottom-right').notify({
                    message: { text: !{JSON.stringify(lingua.addOperation.confirmation)} }
                }).show();
              },
              error: function (result, e) {
                console.log(result);
                alert(result + " : "+ e);
              }
          });  
      });
      
      //ajax sending for adding an operation
      $('#delOperation').click(function() {
          //console.log($('#operation').serialize());
          $.ajax({
              url: '/users/'+!{JSON.stringify(req.user.id)}+'/accounts/'+!{JSON.stringify(req.account.id)}+'/operation/'+$('#ope-to-delete').val(),
              type: "DELETE",
              contentType: "application/json",
              success: function (result) {
                $('#MyGrid').datagrid('reload');
                $('#delete-ope').modal('hide');
                $('.bottom-right').notify({
                    message: { text: !{JSON.stringify(lingua.deleteOperation.confirmation)} }
                }).show();
                $('.amountAccount').trigger('refresh');
              },
              error: function (result, e) {
                console.log(result);
                alert(result + " : "+ e);
              }
          });  
      });
    
      //ajax sending for updating an operation
      $('#editOperation').click(function() {
          var jsonOp = JSON.stringify($("#edit-operation-form").serializeObject());
          console.log(jsonOp);
          //console.log($('#operation').serialize());
          $.ajax({
              url: '/users/'+!{JSON.stringify(req.user.id)}+'/accounts/'+!{JSON.stringify(req.account.id)}+'/operation/'+$('#ope-to-edit').val(),
              type: "PUT",
              contentType: "application/json",
              data: jsonOp,
              success: function (result) {
                $('#MyGrid').datagrid('reload');
                $('#edit-ope').modal('hide');
                $('.bottom-right').notify({
                    message: { text: !{JSON.stringify(lingua.editOperation.confirmation)} }
                }).show();
                $('.amountAccount').trigger('refresh');
              },
              error: function (result, e) {
                console.log(result);
                alert(result + " : "+ e);
              }
          }); 
      });
        
      $('#dp3').datepicker({format:'dd/mm/yyyy'}).datepicker('setValue', new Date());
      $('#dp4').datepicker({format:'dd/mm/yyyy'}).datepicker('setValue', new Date());
      $('#MyGrid').datagrid({
        dataSource: new FlickrDataSource({
          
          url : '/users/'+!{JSON.stringify(req.user.id)}+'/accounts/'+!{JSON.stringify(req.account.id)}+'/operationList?initbalance=true',
          
          // Column definitions for Datagrid
          columns: [{
            property: 'name',
            label: !{JSON.stringify(lingua.operation.name)},
            sortable: true
          },{
            property: 'amount',
            label: !{JSON.stringify(lingua.operation.amount)},
            sortable: true
          },{
            property: 'type',
            label: !{JSON.stringify(lingua.operation.type)},
            sortable: true
          },{
            property: 'date',
            label: !{JSON.stringify(lingua.operation.date)},
            sortable: true
          },{
            property: 'balance',
            label: !{JSON.stringify(lingua.operation.balance)},
            sortable: true
          },{
            property: '_id',
            label: !{JSON.stringify(lingua.action)},
            sortable: true
          }],
          
          // Create IMG tag for each returned image
          formatter: function (items) {
            moment.lang('fr');
            $.each(items, function (index, item) {
              //add balance colors
              if(item.balance>0){
                item.balance='<span class="ope-credit">'+item.balance+"</span>";
              }else{
                item.balance='<span class="ope-debit">'+item.balance+"</span>";
              }               
              //add operations colors
              if(item.type=="credit"){
                item.amount='<span class="ope-credit">'+item.amount+"</span>";
              }else{
                item.amount='<span class="ope-debit">-'+item.amount+"</span>";
              }         
              //date formating
              item.date = '<span class="ope-date">'+moment(item.date, "YYYY-MM-DDTHH:mm:ss.SSSZ").format('LL')+'</span>';
              //action buttons adding
              var id = item._id;
              var actions = '<div class="btn-group"><button type="button" class="btn" id="removeope_'+id+'" ope-name="'+item.name+'" ope-id="'+id+'"><i class="icon-trash"></i></button><button type="button" class="btn" id="editope_'+id+'" ope-id="'+id+'"><i class="icon-pencil"></i></button></div>';
              item._id = actions;
            });
          }
        })
      }).on('loaded', function () {
        $("button[id^='removeope_']").on('click', function(e){
          e.preventDefault();
          $("#ope-to-delete").val($(this).attr("ope-id")); 
          $("#delete-confirm").text(!{JSON.stringify(lingua.deleteOperation.description)}+$(this).attr("ope-name")+" ?"); 
          $('#delete-ope').modal('show');
        });
        
        $("button[id^='editope_']").on('click', function(e){
          e.preventDefault();
          var opeIdToEdit = $(this).attr("ope-id");
          $("#ope-to-edit").val(opeIdToEdit);
          $.ajax({
              url: '/users/'+!{JSON.stringify(req.user.id)}+'/accounts/'+!{JSON.stringify(req.account.id)}+'/operation/'+opeIdToEdit,
              type: "GET",
              contentType: "application/json",
              success: function (result) {
                $('#edit-name').val(result.name);
                $('#edit-amount').val(result.amount);
                $('#edit-type').val(result.type);
                $('#edit-date').val( moment(result.date, "YYYY-MM-DDTHH:mm:ss.SSSZ").format('DD/MM/YYYY'));
              },
              error: function (result, e) {
                console.log(result);
                alert(result + " : "+ e);
              }
          });  
          $('#edit-ope').modal('show');
        });
        
        $.each($('.ope-date'), function (count, item) {
          var date = item.innerHTML;
          var day = moment(date,"DD MMM YYYY");
          if(day.isBefore(moment().subtract('days', 1))){
            $(this).parent().parent().fadeOut(function () {
            $(this).addClass("ope-done").fadeIn();
            });
          }
        });
        
        
      });
    });